name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ye_pizza_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install backend dependencies
      run: cd back-end && npm ci

    - name: Setup test database
      run: |
        cd back-end
        npm run seed
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ye_pizza_test

    - name: Run unit tests
      run: npm run test:unit

    - name: Run integration tests
      run: npm run test:integration
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ye_pizza_test

    - name: Build frontend
      run: npm run build

    - name: Start backend server
      run: |
        cd back-end
        npm run dev &
        sleep 10
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ye_pizza_test
        PORT: 5000

    - name: Start frontend server
      run: |
        npm run preview &
        sleep 5
      env:
        VITE_API_URL: http://localhost:5000

    - name: Run E2E tests
      uses: cypress-io/github-action@v6
      with:
        wait-on: 'http://localhost:5173, http://localhost:5000'
        wait-on-timeout: 60
        browser: chrome
        record: false
      env:
        CYPRESS_baseUrl: http://localhost:5173

    - name: Upload E2E screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-screenshots
        path: tests/e2e/screenshots

    - name: Upload E2E videos
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-videos
        path: tests/e2e/videos

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Build Docker images
      run: |
        docker build -f Dockerfile.backend -t ye-pizza-backend .
        docker build -f Dockerfile.frontend -t ye-pizza-frontend .
